@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider authStateProvider

<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
        <a class="navbar-brand" href="/wordspage">Words</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
            <div class="navbar-nav me-auto mb-2 mb-lg-0">
                <AuthorizeView>
                    <NotAuthorized>
                        <a class="nav-link"  href="/loginpage">Login</a>
                        <a class="nav-link"  href="/registerpage">Register</a>
                    </NotAuthorized>
                    <Authorized>
                        <a class="nav-link"  href="/editwordpage">Create Word</a>
                    </Authorized>
                 
                </AuthorizeView>                   
            </div>
            <AuthorizeView>
                <a style="color:blue; cursor:pointer;" class="nav-link" @onclick="HandleClick">Logout</a>
            </AuthorizeView>
            
        </div>
    </div>
</nav>


@code
{
    async Task HandleClick()
    {
        // Loging out
        // Remove the token from local storage
        await LocalStorage.RemoveItemAsync("token");
        await authStateProvider.GetAuthenticationStateAsync();

        // Go to root page (Start over)
        NavigationManager.NavigateTo("/");
    }
}